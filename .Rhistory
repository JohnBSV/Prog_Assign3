R.version.string
R.version.string
library(swirl)
install.package("swirl")
install.packages("swirl")
library(swirl)
swirl()
swirl()
install_from_swirl("R Programming")
swirl
swirl()
5+7
x<-5+7
x
7<-x-3
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
play()
t<-z
c(t,8)
t<-c(t,8)
nxt()
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,100)
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
clear
clc
wipe
swirl()
library(swirl)
swirl()
swirl()
swirl()
R.version.string
swirl()
end(
bye
info)
info()
bye()
swirl()
uninstall_course("R Programming"); uninstall_course("swirldev-swirl courses-56283ca")
swirl()
getwd()
ls()
x<-9
ls()
dir()
info()
play()
list.files()
nxt()
?list.files
args(list.files)
old.dir<-getwd()
dir.create(testdir)
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("mytest3.R",'folder1','folder2')
?file.path
file.path("folder1","folder2")
?dir.create
dir.create("testdir2")
dir.create(file.path("testdir2","testdir3"),recursive = TRUE,)
unlink("testdir2",recursive=TRUE)
play()
ls
ls()
list.files()
nxt
nxt()
setwd(old.dir)
play()
list.files()
pwd()
getwd()
unlink("testdir",recursive = TRUE)
nxt()
unlink("testdir",recursive = TRUE)
clear()
clear
library(swirl)
swirl()
num_vect<-c(0.5,55,-10,6)
tf<-num_vect(num_vect<1)
tf<-num_vect[num_vect<1]
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse = " ")
play()
paste(my_char,collapse = "")
paste(my_char,collapse = " !")
nxt9
nxt()
my_name<-c(my_char,"Juan")
my_name
paste(my_name,collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1,2,3),c("X", "Y", "Z"),sep = "=")
paste(1:3,c("X", "Y", "Z"),sep = "=")
paste(1:3,c("X", "Y", "Z"),sep = "")
paste(LETTERS, 1:4, sep = "-")
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0
]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
matrix(1:20)
matrix(1:20,4,5)
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
data.frame(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(mydata,cnames)
colnames(my_data,cnames)
colnames(my_data)<-cnames
my_data
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function!")
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisro=11,num=5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
sdf
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(i){i[1]},c(8,4,0))
evaluate(function(i){i[3]},c(8,4,0))
evaluate(function(i){i[length(i)]},c(8,4,0))
?paste
paste("Programming","is","fun")
paste("Programming","is","fun!")
submit()
telegram("Hola","Adrian","como te trata la vida")
submit
submit()
submit()
submit()
submit()
submit()
mad_libs("Office","loco","Adrian")
submit()
"I"%p%"love"%p%"R!"
head(flafs)
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_list<-sapply(flags,class)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[, 19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
lapply(flags,unique)
unique_vals<-lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
?'<<-'
library(swirl)
swirl()
play()
str(flags)
head(flags)
summary(flags)
nxt()
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)
data("iris")
data(iris)
iris
head(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
tapply(iris$Sepal.Length,iris$Species,mean,simplify = T)
?apply
apply(iris, 1, mean)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
apply(iris, 2, mean,rm.na=T)
apply(iris, 2, mean,na.rm=T)
?mean
apply(iris, 2, mean,na.rm=T)
library(datasets)
data(mtcars)
head(mtcars)
tapply(mtcar$mpg,mtcar$cyl,mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
?mapply
tapply(mtcars$hp,mtcars$cyl,mean)
82.63636-122.28571
209.21429-82.63636
setwd("~/R/RProgramming_projects/Prog_Assign3")
load("Hospital.Name")
Hospital.Name[3]
outcome_file<-read.csv("outcome-of-care-measures.csv")
test<-split(outcome_file$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,outcome_file$State)
test
test[WY]
test["WY"]
max(test["WY"])
?max
pmax(test["WY"])
?range
range(test["WY"])
match(96,test)
match(96,test["WY"])
test["WY"][30]
test[["WY"]][30]
test$WY[30]
test$WY
class(test$WY)
length(test$WY)
test$WY[2]
class(test$WY[2])
range(as.numeric(test$WY))
as.numeric(test$WY)
as.numeric("no file")
?factor
as.numeric(factor("no file"))
as.numeric(factor("Not Availbale"))
as.numeric(factor("Not Available"))
as.numeric(factor("Not Available",":poadsf"))
as.numeric(factor("Not Available","poadsf"))
range(as.list(test$WY))
range(as.data.frame(test$WY))
range((test$WY))
range(test$WY)
class(test)
class(test$WY)
as.vector(test$AK)
as.numeric(as.vector(test$AK))
range(as.numeric(as.vector(test$WY))
)
range(as.numeric(as.vector(test$WY)),na.rm = T)
class(outcome_file)
outcome_file[[11]]
?if
)
?if
df
?else
switch(3,1="hola",2="dios",3="bye")
switch("cc", a = 1, cc =, cd =, d = 2)
switch("cd", a = 1, cc =, cd =, d = 2)
switch("a", a = 1, cc =, cd =, d = 2)
switch("3","1"="hola","2"="dios","3"="bye")
switch(as.character(2),"1"=corr_out<-11,"2"=corr_out<-17,"3"=corr_out<-23)
atributtes(test)
attributes(test)
test.names
test$names
names(test)
match(6,c(2,5,6,3,6,6,8,7))
?match
pmatch(6,c(2,5,6,3,6,6,8,7))
pmatch(6,c(2,5,6,3,6,6,8,7),duplicates.ok = T)
pmatch(6,c(2,5,6,3,6,6,8,7,6),duplicates.ok = T)
pmatch(6,c(2,5,6,3,6,6,8,7,6),duplicates.ok = F)
pmatch(6,c(2,5,8,3,6,6,8,7,6),duplicates.ok = F)
pmatch(6,c(2,5,8,3,6,6,8,7,6),duplicates.ok = T)
charmatch(6,c(2,5,8,3,6,6,8,7,6),duplicates.ok = T)
charmatch(6,c(2,5,8,3,6,6,8,7,6))
findInterval(6,c(2,5,8,3,6,6,8,7,6))
?match
"%w/o%" <- function(x, y) x[!x %in% y]
6 %w/o% c(2,5,8,3,6,6,8,7,6
)
c(2,5,8,3,6,6,8,7,6) %w/o% 6
all<-c(2,5,8,3,6,6,8,7,6) %w/o% 6
match(all,c(2,5,6,3,6,6,8,7))
test[[1]]
test[[1]][==13.4]
test[[1]][13.4]
A>b
"a">"b"
"a"<"b"
"Bortec"<"Cargo"
"Bortec"<"Aargo"
vectorp<-c("Bargo","Gorl","Lism")
min(vectorp)
vectorp<-c(200,9,8)
Hospital.Name[vectorp]
lectura<-Hospital.Name[vectorp]
lectura
lectura[2]
Hospital.Name[c(1,2,6)]
Hospital.Name[c(1,2,7)]
Hospital.Name[c(1,2,10)]
outcome_file$Hospital.Name
save(outcome_file$Hospital.Name,file = "Hospital.Name")
save(outcome_file$Hospital.Name,file = "Hospital.Name")
HN<-outcome_file$Hospital.Name
save(HN,file = "Hospital.Name")
Hospital.Name[c(1,2,7)]
Hospital.Name[c(1,2,6)]
HN[c(1,2,6)]
lectura<-HN[c(1,2,6)]
lectura<-HN[c(1,2)]
lectura[1]<lectura[2]
as.vector(lectura[1])<as.vector(lectura[2])
lectura
lectura<-HN[c(1,2,6)]
as.vector(lectura[2])<as.vector(lectura[3])
lectura
lectura<-HN[c(1,2,8)]
as.vector(lectura[2])<as.vector(lectura[3])
lectura
?sort
sort(c("Bronks","Aaron","Losdf","Bglse"))
